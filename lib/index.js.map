{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAM,OAAO,cAAI,UAAJ,CAAe,EAAf,CAAP;IACE,MAAoB,KAApB;IAAK,OAAe,KAAf;IAAM,OAAS,KAAT;;;AAEnB,IAAM,OAAO,SAAP,IAAO,GAAM;AACjB,eAAI,UAAJ,GADiB;AAEjB,eAAI,aAAJ,GAFiB;CAAN;;AAKb,2DAAC;MAOS,KACA,MACA,UACA;;;;;;;iBARA,8BAAG,aAAI,OAAJ,CAAH;;;;;iBACc,8BAAG,aAAI,UAAJ,CAAH;;;;;2BAAT,kCAA+B;;;;;AACxC;gBACM,IAAI,KAAJ,CAAU,8CAAV,EAA0D,kBAAI,IAAJ;;;;iBAEhD,8BAAG,aAAI,SAAJ,CAAH,CAAkB,IAAlB;;;AAAZ;;iBACa,8BAAG,aAAI,IAAJ,CAAH;;;AAAb;AACA,qBAAW,KAAK,MAAL,CAAY;mBAAQ,KAAK,IAAL,KAAc,GAAd;WAAR;AACvB,kBAAQ,uBAAa,EAAE,kBAAF,EAAY,UAAZ,EAAkB,UAAlB,EAAwB,QAAxB,EAAb;;AACd,gBAAM,MAAN;AACA,kBAAQ,GAAR,CAAY,eAAZ,EAA6B,kBAAI,IAAJ,EAAU,kBAAI,OAAJ,CAAvC;;;;;;;;AAEA,kBAAQ,KAAR,CAAc,YAAM,KAAN,CAAd;AACA;;;;;;;;CAfH,EAAD;;;;;AAsBA,QAAQ,EAAR,CAAW,QAAX,EAAqB,YAAM;AACzB,SADyB;AAEzB,aAAW,YAAM;AACf,YAAQ,IAAR,CAAa,CAAb,EADe;GAAN,EAER,GAFH,EAFyB;CAAN,CAArB","file":"index.js","sourcesContent":["import pm2 from 'pm2';\nimport pmx from 'pmx';\nimport semver from 'semver';\nimport $p from 'babel-promisify';\nimport pkg from '../package.json';\nimport PM2Monyt from './PM2Monyt';\n\nconst conf = pmx.initModule({});\nconst { app, host, port } = conf;\n\nconst exit = () => {\n  pm2.disconnect();\n  pm2.disconnectBus();\n};\n\n(async() => {\n  try {\n    await $p(pm2.connect)();\n    if (semver.lt(await $p(pm2.getVersion)(), '0.15.11')) {\n      exit();\n      throw new Error('This PM2 version is not compatible with %s!!', pkg.name);\n    }\n    const bus = await $p(pm2.launchBus).call(pm2);\n    const list = await $p(pm2.list)();\n    const clusters = list.filter(each => each.name === app);\n    const monyt = new PM2Monyt({ clusters, host, port, bus });\n    monyt.listen();\n    console.log('[%s:%s] ready', pkg.name, pkg.version);\n  } catch (error) {\n    console.error(error.stack);\n    exit();\n  }\n})();\n\n/**\n * When PM2 try to kill app\n */\nprocess.on('SIGINT', () => {\n  exit();\n  setTimeout(() => {\n    process.exit(0);\n  }, 200);\n});\n"]}