{"version":3,"sources":["../src/Graphite.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB,Q;;;AACnB,oBAAY,IAAZ,EAAkB,IAAlB,EAAwB;AAAA;AAAA,0DACtB,yBAAM,EAAE,sBAAoB,IAApB,SAA4B,IAA5B,MAAF,EAAN,CADsB;AAEvB;;qBAED,K,kBAAM,O,EAAS;AAAA;;AACb,SAAK,YAAL;;AAEA,WAAO,sBAAY,UAAC,GAAD,EAAM,GAAN,EAAc;AAC/B,UAAI,QAAQ,EAAZ;AACA,0BAAY,OAAZ,EAAqB,OAArB,CAA6B,eAAO;AAClC,YAAM,QAAQ,QAAQ,GAAR,EAAa,KAA3B;AACA,YAAM,YAAY,KAAK,KAAL,CAAW,CAAC,QAAQ,GAAR,EAAa,SAAb,IAA0B,KAAK,GAAL,EAA3B,IAAyC,IAApD,CAAlB;AACA,iBAAS,CAAE,GAAF,EAAO,KAAP,EAAc,SAAd,EAA0B,IAA1B,CAA+B,GAA/B,IAAsC,IAA/C;AACD,OAJD;;AAMA,cAAQ,GAAR,CAAY,KAAZ;AACA,UAAI,OAAK,OAAL,CAAa,KAAb,CAAmB,KAAnB,EAA0B,OAA1B,EAAmC,iBAAS;AAC9C,YAAI,KAAJ;AACD,OAFG,CAAJ;AAGD,KAZM,CAAP;AAaD,G;;;;;kBArBkB,Q","file":"Graphite.js","sourcesContent":["import CarbonClient from 'graphite/lib/CarbonClient';\n\nexport default class Graphite extends CarbonClient {\n  constructor(host, port) {\n    super({ dsn: `plaintext://${host}:${port}/` });\n  }\n\n  write(metrics) {\n    this._lazyConnect();\n\n    return new Promise((res, rej) => {\n      let lines = '';\n      Object.keys(metrics).forEach(key => {\n        const value = metrics[key].value;\n        const timestamp = Math.floor((metrics[key].timestamp || Date.now()) / 1000);\n        lines += [ key, value, timestamp ].join(' ') + '\\n';\n      });\n\n      console.log(lines);\n      res(this._socket.write(lines, 'UTF-8', error => {\n        rej(error);\n      }));\n    });\n  }\n}\n"]}