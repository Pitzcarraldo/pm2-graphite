{"version":3,"sources":["../src/Graphite.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB,Q;AACnB,oBAAY,IAAZ,EAAkB,IAAlB,EAAwB;AAAA;;AACtB,SAAK,MAAL,GAAc,mBAAS,YAAT,kBAAqC,IAArC,SAA6C,IAA7C,OAAd;AACA,SAAK,MAAL,GAAc,KAAK,MAAL,CAAY,OAA1B;AACA,SAAK,MAAL,GAAc,KAAK,MAAL,CAAY,OAA1B;AACD;;qBAED,K,kBAAM,O,EAAS;AAAA;;AACb,WAAO,sBAAY,UAAC,GAAD,EAAM,GAAN,EAAc;AAC/B,YAAK,MAAL,CAAY,YAAZ;;AAEA,UAAI,QAAQ,EAAZ;AACA,0BAAY,OAAZ,EAAqB,OAArB,CAA6B,eAAO;AAClC,YAAM,QAAQ,QAAQ,GAAR,EAAa,KAA3B;AACA,YAAM,YAAY,KAAK,KAAL,CAAW,CAAC,QAAQ,GAAR,EAAa,SAAb,IAA0B,KAAK,GAAL,EAA3B,IAAyC,IAApD,CAAlB;AACA,iBAAS,CAAE,GAAF,EAAO,KAAP,EAAc,SAAd,EAA0B,IAA1B,CAA+B,GAA/B,IAAsC,IAA/C;AACD,OAJD;;AAMA,cAAQ,GAAR,CAAY,KAAZ;AACA,UAAI,MAAK,MAAL,CAAY,KAAZ,CAAkB,KAAlB,EAAyB,OAAzB,EAAkC,iBAAS;AAC7C,YAAI,KAAJ;AACD,OAFG,CAAJ;AAGD,KAdM,CAAP;AAeD,G;;;;;kBAvBkB,Q","file":"Graphite.js","sourcesContent":["import graphite from 'graphite';\n\nexport default class Graphite {\n  constructor(host, port) {\n    this.client = graphite.createClient(`plaintext://${host}:${port}/`);\n    this.carbon = this.client._carbon;\n    this.socket = this.carbon._socket;\n  }\n\n  write(metrics) {\n    return new Promise((res, rej) => {\n      this.carbon._lazyConnect();\n\n      let lines = '';\n      Object.keys(metrics).forEach(key => {\n        const value = metrics[key].value;\n        const timestamp = Math.floor((metrics[key].timestamp || Date.now()) / 1000);\n        lines += [ key, value, timestamp ].join(' ') + '\\n';\n      });\n\n      console.log(lines);\n      res(this.socket.write(lines, 'UTF-8', error => {\n        rej(error);\n      }));\n    });\n  }\n}\n"]}