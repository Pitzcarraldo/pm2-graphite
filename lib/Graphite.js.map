{"version":3,"sources":["../src/Graphite.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB,Q;;;;;;;;qBAEnB,O,sBAAU;AAAA;;AACR,WAAO,sBAAY,UAAC,GAAD,EAAM,GAAN,EAAc;AAC/B,gCAAM,OAAN,cAAc,iBAAS;AACrB,YAAI,KAAJ,EAAW;AACT,iBAAO,IAAI,KAAJ,CAAP;AACD;AACD,eAAO,IAAI,8BAAJ,CAAP;AACD,OALD;AAMD,KAPM,CAAP;AAQD,G;;qBAED,K,kBAAM,O,EAAS;AAAA;;AACb,WAAO,sBAAY,UAAC,GAAD,EAAM,GAAN,EAAc;AAC/B,UAAM,QAAQ,OAAK,OAAL,CAAa,OAAb,CAAd;AACA,UAAM,QAAQ,EAAd;AACA,0BAAY,KAAZ,EAAmB,OAAnB,CAA2B,eAAO;AAChC,YAAM,QAAQ,MAAM,GAAN,EAAW,KAAzB;AACA,YAAM,YAAY,KAAK,KAAL,CAAW,CAAC,MAAM,GAAN,EAAW,SAAX,IAAwB,KAAK,GAAL,EAAzB,IAAuC,IAAlD,CAAlB;AACA,cAAM,IAAN,CAAW,CAAE,GAAF,EAAO,KAAP,EAAc,SAAd,EAA0B,IAA1B,CAA+B,GAA/B,CAAX;AACD,OAJD;AAKA,UAAI;AACF,YAAI,OAAK,MAAL,CAAY,KAAZ,CAAkB,MAAM,IAAN,CAAW,IAAX,CAAlB,CAAJ;AACD,OAFD,CAEE,OAAO,GAAP,EAAY;AACZ,YAAI,GAAJ;AACD;AACF,KAbM,CAAP;AAcD,G;;;;;kBA5BkB,Q","file":"Graphite.js","sourcesContent":["import GraphiteClient from 'graphite-client';\n\nexport default class Graphite extends GraphiteClient {\n\n  connect() {\n    return new Promise((res, rej) => {\n      super.connect(error => {\n        if (error) {\n          return rej(error);\n        }\n        return res('Connected to Graphite server');\n      });\n    });\n  }\n\n  write(metrics) {\n    return new Promise((res, rej) => {\n      const flatt = this.flatten(metrics);\n      const lines = [];\n      Object.keys(flatt).forEach(key => {\n        const value = flatt[key].value;\n        const timestamp = Math.floor((flatt[key].timestamp || Date.now()) / 1000);\n        lines.push([ key, value, timestamp ].join(' '));\n      });\n      try {\n        res(this.socket.write(lines.join('\\n')));\n      } catch (err) {\n        rej(err);\n      }\n    });\n  }\n}\n"]}